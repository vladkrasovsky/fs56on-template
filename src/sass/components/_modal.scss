// Breakpoints
$mobile: 320px;
$tablet: 768px;
$desktop: 1360px;

// Breakpoints Map
$breakpoints: (
  'mobile': (
    max-width: $mobile,
  ),
  'tablet': (
    max-width: $tablet,
  ),
  'desktop': (
    max-width: $desktop,
  ),
) !default;

/// Mixin to manage responsive breakpoints
///
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media screen and #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// @include
@include respond-to('mobile') {
}

@include respond-to('tablet') {
}

@include respond-to('desktop') {
}

// Modal Window Styles
.overlay {
  /* Скрываем подложку  */

  opacity: 0;
  visibility: hidden;

  position: fixed;
  // padding: 94px 15px;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 20;
  overflow-y: scroll;
  transition: $transition-duration $transition-animation;
}

/* Стили для модальных окон */

.modal {
  /* Скрываем окна  */
  opacity: 0;
  visibility: hidden;

  /*  Установаем ширину окна  */

  width: 528px;
  height: 581px;

  @include respond-to('tablet') {
    max-width: 450px;
    max-height: 609px;
    width: 95vw;
    height: 95vh;
  }

  @include respond-to('mobile') {
    max-width: 290px;
    width: 95vw;
    height: 95vh;
  }

  /*  Центрируем и задаем z-index */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 30; /* Должен быть выше чем у подложки*/

  /*  Побочные стили   */
  box-shadow: 0 3px 10px -0.5px rgba(0, 0, 0, 0.2);
  text-align: center;
  padding: 30px;
  border-radius: 3px;
  background-color: $color-bg-lightest;
  transition: 0.3s all;
  &__title {
    font-weight: 300;
    font-size: 38px;
    @include respond-to('tablet') {
      font-size: 1.6rem;
    }
    @include respond-to('mobile') {
      font-size: 1.2rem;
    }

    line-height: calc(48 / 38);
    color: $color-text;
    margin-bottom: 40px;
  }
  &__text {
    font-weight: 400;
    font-size: 18px;
    @include respond-to('tablet') {
      font-size: 0.8rem;
    }
    @include respond-to('mobile') {
      font-size: 0.6rem;
    }

    line-height: calc(28 / 18);

    text-align: center;

    color: $color-text;
  }
  &__close {
    position: absolute;
    top: 25px;
    right: 25px;
    @include respond-to('tablet') {
      top: 20px;
      right: 20px;
    }
    @include respond-to('mobile') {
      top: 15px;
      right: 15px;
    }
    padding: 0;
    margin: 0;

    display: flex;
    justify-content: center;
    align-items: center;

    width: 30px;
    height: 30px;
    background-color: transparent;

    border-radius: 50%;
    border: 1px solid rgba(0, 0, 0, 0.1);

    transition: background-color $transition-duration $transition-animation,
      border-color$transition-duration $transition-animation;

    &:hover,
    &:focus {
      background-color: $color-text-light;
      border-color: $color-text-light;
      .modal__cross {
        fill: $color-text-lightest;
        transform: rotateZ(360deg);
      }
    }
  }
  &__envelope {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &__cross {
    fill: $color-text-light;
    cursor: pointer;

    transition: fill $transition-duration $transition-animation,
      transform $transition-duration $transition-animation;
  }
}

/* Стили для активных классов подложки и окна */

.modal.active,
.overlay.active {
  opacity: 1;
  visibility: visible;
}
